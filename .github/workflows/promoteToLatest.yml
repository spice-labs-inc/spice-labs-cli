name: Promote Release to Latest

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Git tag to promote (e.g., v1.2.3)"
        required: true

jobs:
  promote:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Derive and validate version
        id: version
        shell: bash
        run: |
          raw_tag="${{ inputs.tag }}"
          version="${raw_tag#v}"

          if [[ "$raw_tag" == "$version" ]]; then
            echo "❌ Input tag must start with 'v' (e.g. v1.2.3)." >&2
            exit 1
          fi

          if [[ ! "$version" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "❌ Invalid tag format: $raw_tag. Must be v<major>.<minor>.<patch>." >&2
            exit 1
          fi

          echo "Validated tag: $raw_tag -> Docker tag: $version"
          echo "version=$version" >> "$GITHUB_OUTPUT"

      - name: Pull image and tag as latest
        run: |
          DOCKER_TAG="${{ steps.version.outputs.version }}"
          docker pull spicelabs/spice-labs-cli:$DOCKER_TAG
          docker tag spicelabs/spice-labs-cli:$DOCKER_TAG spicelabs/spice-labs-cli:latest
          docker push spicelabs/spice-labs-cli:latest

      - name: Find release ID for tag
        id: release
        run: |
          TAG=${{ inputs.tag }}
          RELEASE_JSON=$(gh api /repos/${{ github.repository }}/releases/tags/$TAG)
          echo "$RELEASE_JSON" > release.json
          ID=$(jq -r .id release.json)
          echo "release_id=$ID" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Mark release as non-prerelease
        run: |
          gh api --method PATCH /repos/${{ github.repository }}/releases/${{ steps.release.outputs.release_id }} \
            -f prerelease=false
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
